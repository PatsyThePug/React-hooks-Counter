Contador simple

React mejora la creación de componentes personalizados, que puedes representar a través de tu aplicación web utilizando el método ReactDOM.createRoot(). Un componente personalizado te permite dividir y conquistar, separando los desafíos lógicos y visuales en partes más pequeñas, lo que te brinda un mayor control sobre la pantalla y las funcionalidades de cada parte de la aplicación web.

Por ejemplo, para crear un componente bootstrap <Card /> codificarías esto:

unction Card(props){
    return (
        <div className="card">
            <img className="card-img-top" src="http://via.placeholder.com/350x150" alt="Card image cap" />
            <div className="card-body">
                <h5 className="card-title">Card title</h5>
                <p className="card-text">Some quick example text to build on the card title and fill the card's content.</p>
                <a href="#" className="btn btn-primary">Go somewhere</a>
            </div>
        </div>
    );
}

Después de declararlo, puedes importar y utilizar en tu aplicación web de esta manera:


// Importa react al bundle
import React from 'react';
import ReactDOM from 'react-dom';
import Card from './component/Card.jsx'

const root = ReactDOM.createRoot(document.querySelector('#root'));
root.render(<App />);

// Si usas una version de react anterior a la 18 puedes usar
// ReactDOM.render de esta manera
// ReactDOM.render(<Card />, document.quertSelector('#root'));


/ Uso de componente personalizado
<Card imageUrl="http://via.placeholder.com/350x150" title="A nice image" />

Para uso dentro del método de renderización de su componente:


// Declaración de componente personalizado (Card.jsx)

function Card(props){
    return (
        <div className="card">
            <img className="card-img-top" src={props.imageUrl} alt="Card image cap" />
            <div className="card-body">
                <h5 className="card-title">{props.title}</h5>
                <p className="card-text">Some quick example text to build on the card title and fill the card's content.</p>
                <a href="#" className="btn btn-primary">Go somewhere</a>
            </div>
        </div>
    );
}
* El propósito principal del componente es mostrar cuántos segundos han pasado desde que el sitio web terminó de cargarse (onLoad).
* Usa ReactDOM.createRoot() para representar el componente en la aplicación web.
* Usa la función setInterval() para volver a renderizar el componente cada segundo.
* El componente no necesita un estado local, puede pasar la cantidad de segundos como props de la siguiente manera:



SecondsCounter seconds={3434} />
rear una opción de cuenta regresiva a partir de un número dado.
Crear funciones de parar, reiniciar y resumir el contador.
Crear una alerta cuando el usuario llega a un tiempo específico, es decir, el usuario ingresa "10", y una alerta debería mostrarse notificando al usuario que se alcanzó su tiempo.

